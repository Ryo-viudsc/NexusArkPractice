{"ast":null,"code":"//utility functions allows us to keep our \n//files clean and organize functions that \n//we may need in multiple files in one location \n//this is for users to add the same items multiple times \nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n  //if item is not found, the cart item will be \"undefined\"   \n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id);\n\n  if (existingCartItem) {\n    //note: \n    //map function actually changes the state \n    return cartItems.map(cartItem => cartItem.id === cartItemToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  } //if existingCartItem is \"undefined\" \n\n\n  return [...cartItems, { ...cartItemToAdd,\n    quantity: 1\n  }];\n};\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToRemove.id); //if the curren item to remove is the last one,\n  //then, just filter out the cartItems to \n  //eliminate just the current item using its id \n\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n  }\n\n  ;\n  return cartItems.map(cartItem => cartItem.id === cartItemToRemove.id ? { ...cartItem,\n    quantity: cartItem.quantity - 1\n  } : cartItem);\n};","map":{"version":3,"sources":["C:/Users/bskki/AWSamp_GraphQL Udemy/crwn-clothing/src/redux/cart/cart.utils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existingCartItem","find","cartItem","id","map","quantity","removeItemFromCart","cartItemToRemove","filter"],"mappings":"AAAA;AACA;AACA;AAEA;AACA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AAEzD;AACA,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACrBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EADrB,CAAzB;;AAIE,MAAGH,gBAAH,EAAqB;AACjB;AACA;AACA,WAAOF,SAAS,CAACM,GAAV,CAAcF,QAAQ,IACvBA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAA9B,GACE,EAAC,GAAGD,QAAJ;AAAcG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAkB;AAA1C,KADF,GAEEH,QAHD,CAAP;AAKH,GAfsD,CAiBvD;;;AACA,SAAO,CAAC,GAAGJ,SAAJ,EAAe,EAAC,GAAGC,aAAJ;AAAmBM,IAAAA,QAAQ,EAAE;AAA7B,GAAf,CAAP;AACH,CAnBM;AAqBP,OAAO,MAAMC,kBAAkB,GAAG,CAACR,SAAD,EAAYS,gBAAZ,KAAiC;AAEjE,QAAMP,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CAAeC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EAA5D,CAAzB,CAFiE,CAIjE;AACA;AACA;;AACA,MAAGH,gBAAgB,CAACK,QAAjB,KAA8B,CAAjC,EAAoC;AAChC,WAAOP,SAAS,CAACU,MAAV,CAAiBN,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EAA9D,CAAP;AACH;;AAAA;AAED,SAAOL,SAAS,CAACM,GAAV,CACLF,QAAQ,IACRA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EAAjC,GACA,EAAC,GAAGD,QAAJ;AAAcG,IAAAA,QAAQ,EAAGH,QAAQ,CAACG,QAAT,GAAmB;AAA5C,GADA,GAEEH,QAJG,CAAP;AAMD,CAjBM","sourcesContent":["//utility functions allows us to keep our \r\n//files clean and organize functions that \r\n//we may need in multiple files in one location \r\n\r\n//this is for users to add the same items multiple times \r\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\r\n\r\n  //if item is not found, the cart item will be \"undefined\"   \r\n  const existingCartItem = cartItems.find( \r\n      cartItem => cartItem.id === cartItemToAdd.id\r\n      );\r\n\r\n    if(existingCartItem) {\r\n        //note: \r\n        //map function actually changes the state \r\n        return cartItems.map(cartItem => \r\n              cartItem.id === cartItemToAdd.id\r\n              ? {...cartItem, quantity: cartItem.quantity+1}\r\n              : cartItem \r\n          );\r\n    } \r\n\r\n    //if existingCartItem is \"undefined\" \r\n    return [...cartItems, {...cartItemToAdd, quantity: 1}]; \r\n};\r\n\r\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\r\n\r\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToRemove.id);\r\n\r\n  //if the curren item to remove is the last one,\r\n  //then, just filter out the cartItems to \r\n  //eliminate just the current item using its id \r\n  if(existingCartItem.quantity === 1) {\r\n      return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id)\r\n  };\r\n\r\n  return cartItems.map(  \r\n    cartItem => \r\n    cartItem.id === cartItemToRemove.id ?\r\n    {...cartItem, quantity : cartItem.quantity -1}\r\n    : cartItem\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}