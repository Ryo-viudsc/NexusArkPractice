{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\bskki\\\\AWSamp_GraphQL Udemy\\\\crwn-clothing\\\\src\\\\components\\\\cart-icon\\\\cart-icon.component.jsx\";\nimport React from 'react';\nimport { ReactComponent as ShoppingIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/shopping-bag.svg\";\nimport './cart-icon.style.scss';\nimport { connect } from 'react-redux';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\nimport { selectCartItemsCount } from '../../redux/cart/cart.selectors';\nimport { createStructuredSelector } from 'reselect';\n\nconst CartIcon = ({\n  toggleCartHidden,\n  itemCount\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"cart-icon\",\n  onClick: toggleCartHidden,\n  children: [/*#__PURE__*/_jsxDEV(ShoppingIcon, {\n    className: \"shopping-icon\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"item-count\",\n    children: [\" \", itemCount, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 3\n}, this); //pass the whole state \n\n\n_c = CartIcon;\nconst mapStateToProps = createStructuredSelector({\n  itemCount: selectCartItemsCount\n}); // const mapStateToProps = (state) => ({\n//     itemCount : state.cart.cartItems.reduce( (accumalatedQuantity, cartItem) => accumalatedQuantity + cartItem.quantity, 0 )\n// });\n//remember dispatch is the function that accepts the \n//action object and triggers the reducer \n\nconst mapDispatchToProps = dispatch => ({\n  toggleCartHidden: () => dispatch(toggleCartHidden())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartIcon);\n\nvar _c;\n\n$RefreshReg$(_c, \"CartIcon\");","map":{"version":3,"sources":["C:/Users/bskki/AWSamp_GraphQL Udemy/crwn-clothing/src/components/cart-icon/cart-icon.component.jsx"],"names":["React","connect","toggleCartHidden","selectCartItemsCount","createStructuredSelector","CartIcon","itemCount","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,wBAAP;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,gBAAR,QAA+B,+BAA/B;AACA,SAAQC,oBAAR,QAAmC,iCAAnC;AACA,SAAQC,wBAAR,QAAuC,UAAvC;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACH,EAAAA,gBAAD;AAAmBI,EAAAA;AAAnB,CAAD,kBACf;AAAK,EAAA,SAAS,EAAC,WAAf;AAA2B,EAAA,OAAO,EAAEJ,gBAApC;AAAA,0BACE,QAAC,YAAD;AAAc,IAAA,SAAS,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA,oBAA+BI,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,C,CAOA;;;KAPMD,Q;AAQN,MAAME,eAAe,GAAGH,wBAAwB,CAAC;AAC7CE,EAAAA,SAAS,EAAGH;AADiC,CAAD,CAAhD,C,CAIA;AACA;AACA;AAEA;AACA;;AACA,MAAMK,kBAAkB,GAAIC,QAAD,KAAe;AACtCP,EAAAA,gBAAgB,EAAG,MAAMO,QAAQ,CAACP,gBAAgB,EAAjB;AADK,CAAf,CAA3B;;AAIA,eAAeD,OAAO,CAACM,eAAD,EAAiBC,kBAAjB,CAAP,CAA4CH,QAA5C,CAAf","sourcesContent":["import React from 'react';\r\nimport {ReactComponent as ShoppingIcon} from '../../assets/shopping-bag.svg';\r\nimport './cart-icon.style.scss';\r\nimport {connect} from 'react-redux';\r\nimport {toggleCartHidden} from '../../redux/cart/cart.actions';\r\nimport {selectCartItemsCount} from '../../redux/cart/cart.selectors';\r\nimport {createStructuredSelector} from 'reselect';\r\n\r\nconst CartIcon = ({toggleCartHidden, itemCount}) => (\r\n  <div className='cart-icon' onClick={toggleCartHidden}>\r\n    <ShoppingIcon className='shopping-icon' />\r\n    <span className='item-count'> {itemCount} </span>\r\n  </div>\r\n);\r\n\r\n//pass the whole state \r\nconst mapStateToProps = createStructuredSelector({\r\n    itemCount : selectCartItemsCount\r\n})\r\n\r\n// const mapStateToProps = (state) => ({\r\n//     itemCount : state.cart.cartItems.reduce( (accumalatedQuantity, cartItem) => accumalatedQuantity + cartItem.quantity, 0 )\r\n// });\r\n\r\n//remember dispatch is the function that accepts the \r\n//action object and triggers the reducer \r\nconst mapDispatchToProps = (dispatch) => ({\r\n    toggleCartHidden : () => dispatch(toggleCartHidden())\r\n});\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CartIcon); "]},"metadata":{},"sourceType":"module"}