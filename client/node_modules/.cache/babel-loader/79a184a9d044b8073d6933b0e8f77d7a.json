{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\bskki\\\\AWSamp_GraphQL Udemy\\\\crwn-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React, { Component } from 'react';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport { Route } from 'react-router-dom';\nimport { firestore } from '../../firebase/firebase.utils';\nimport CollectionPage from '../collections/collections.component'; //this is what selectShopItems looks like : \n// export const selectShopItems = createSelector(\n//   [selectShop],\n//   shop => shop.selectItems\n// );\n//we want to selectively render the nested root \n//one root takes us to the overview only when the path has '/shop'\n//the other root takes us to the /shop.:category\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  //note : firestore.collection is the method to fetch the reference of whatever comes in the ('')  \n  componentDidMount() {\n    const CollectionRef = firestore.collection('collections');\n    console.log(CollectionRef); //onSnapshot method \n    //The listener can be cancelled by calling the function that is returned when onSnapshot is called.\n    //@return\n    //An unsubscribe function that can be called to cancel the snapshot listener.\n\n    CollectionRef.onSnapshot(async snapshot => {\n      console.log(\"here\", snapshot);\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shop-page\",\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: `${match.path}`,\n          component: CollectionsOverview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: `${match.path}/:collectionId`,\n          component: CollectionPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default ShopPage;","map":{"version":3,"sources":["C:/Users/bskki/AWSamp_GraphQL Udemy/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Component","CollectionsOverview","Route","firestore","CollectionPage","ShopPage","unsubscribeFromSnapshot","componentDidMount","CollectionRef","collection","console","log","onSnapshot","snapshot","render","match","props","path"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,SAAQC,KAAR,QAAoB,kBAApB;AAEA,SAAQC,SAAR,QAAwB,+BAAxB;AAEA,OAAOC,cAAP,MAA2B,sCAA3B,C,CACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA,MAAMC,QAAN,SAAuBN,KAAK,CAACC,SAA7B,CAAsC;AAAA;AAAA;AAAA,SAGpCM,uBAHoC,GAGV,IAHU;AAAA;;AAKpC;AACAC,EAAAA,iBAAiB,GAAE;AACf,UAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,aAAZ,EAFe,CAIf;AACA;AACA;AACA;;AACAA,IAAAA,aAAa,CAACI,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AAACH,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBE,QAAnB;AAA6B,KAAzE;AAEH;;AAEDC,EAAAA,MAAM,GAAE;AAEN,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKC,KAArB;AAEA,wBAAO;AAAA,6BACH;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAAjC;AAAqC,UAAA,SAAS,EAAEhB;AAAhD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAG,GAAEc,KAAK,CAACE,IAAK,gBAA3B;AAA6C,UAAA,SAAS,EAAEb;AAAxD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADG,qBAAP;AAMD;;AA5BmC;;AAgCtC,eAAeC,QAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\r\nimport {Route} from 'react-router-dom';\r\n\r\nimport {firestore} from '../../firebase/firebase.utils';\r\n\r\nimport CollectionPage from '../collections/collections.component';\r\n//this is what selectShopItems looks like : \r\n// export const selectShopItems = createSelector(\r\n//   [selectShop],\r\n//   shop => shop.selectItems\r\n// );\r\n\r\n//we want to selectively render the nested root \r\n//one root takes us to the overview only when the path has '/shop'\r\n//the other root takes us to the /shop.:category\r\nclass ShopPage extends React.Component{\r\n  \r\n \r\n  unsubscribeFromSnapshot = null;\r\n\r\n  //note : firestore.collection is the method to fetch the reference of whatever comes in the ('')  \r\n  componentDidMount(){\r\n      const CollectionRef = firestore.collection('collections');\r\n      console.log(CollectionRef);\r\n      \r\n      //onSnapshot method \r\n      //The listener can be cancelled by calling the function that is returned when onSnapshot is called.\r\n      //@return\r\n      //An unsubscribe function that can be called to cancel the snapshot listener.\r\n      CollectionRef.onSnapshot(async snapshot => {console.log(\"here\",snapshot)})\r\n       \r\n  }\r\n\r\n  render(){  \r\n  \r\n    const {match} = this.props;\r\n\r\n    return(<>\r\n        <div className=\"shop-page\">\r\n          <Route exact path={`${match.path}`}  component={CollectionsOverview} />                 \r\n          <Route path={`${match.path}/:collectionId`}  component={CollectionPage} />                 \r\n        </div> \r\n      </>)\r\n  }\r\n}\r\n\r\n\r\nexport default ShopPage; "]},"metadata":{},"sourceType":"module"}