{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\bskki\\\\AWSamp_GraphQL Udemy\\\\crwn-clothing\\\\client\\\\src\\\\components\\\\stripe-button\\\\stripe-button.component.jsx\";\nimport React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport axios from 'axios';\n\nconst StripeCheckoutButton = ({\n  price\n}) => {\n  //stripe wants to see value in USD cents \n  const priceForStripe = price * 100;\n  const publishableKey = \"pk_test_51I9c9CLfAl74B6CQXK0r7mx07DG6u7tqeSQy0h8PaxV1DqyADCmJal0pHT7OaNyJajg9Rqdppcn8JDwGsRl51nav00TxVCuvqo\"; //we are actually gonna make the request \n  //to the payment route /payment \n\n  const onToken = token => {\n    console.log(\"inside of the token\", token); // alert('Payment Successful');\n\n    axios({\n      url: 'payment',\n      //will use whatever url at where we are \n      method: 'post',\n      data: {\n        amount: priceForStripe //\n\n      }\n    }).then(response => {\n      alert('Paument was successful');\n    }).catch(error => {\n      console.log('Payment Error : ', JSON.parse(error));\n      alert('There was an issue with your pay. Please make sure you use the provided credit card.');\n    });\n  }; //StripeCheckout Button takes a bunch of props   \n\n\n  return /*#__PURE__*/_jsxDEV(StripeCheckout, {\n    label: \"Pay Now\",\n    name: \"Nexus Ark Practice\",\n    billingAddress: true,\n    shippingAddress: true,\n    image: \"https://sendeyo.com/up/d/f3eb2117da\",\n    description: `Your total is $${price}`,\n    amount: priceForStripe,\n    paneLable: \"Pay Now (pane label)\",\n    token: onToken //token is onSuccess callback when the payment suceeds \n    ,\n    stripeKey: \"pk_test_51I9c9CLfAl74B6CQXK0r7mx07DG6u7tqeSQy0h8PaxV1DqyADCmJal0pHT7OaNyJajg9Rqdppcn8JDwGsRl51nav00TxVCuvqo\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this);\n};\n\n_c = StripeCheckoutButton;\nexport default StripeCheckoutButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"StripeCheckoutButton\");","map":{"version":3,"sources":["C:/Users/bskki/AWSamp_GraphQL Udemy/crwn-clothing/client/src/components/stripe-button/stripe-button.component.jsx"],"names":["React","StripeCheckout","axios","StripeCheckoutButton","price","priceForStripe","publishableKey","onToken","token","console","log","url","method","data","amount","then","response","alert","catch","error","JSON","parse"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AACtC;AAEA,QAAMC,cAAc,GAAGD,KAAK,GAAG,GAA/B;AACA,QAAME,cAAc,GAAG,6GAAvB,CAJsC,CAMvC;AACA;;AACC,QAAMC,OAAO,GAAGC,KAAK,IAAI;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkCF,KAAlC,EADqB,CAEtB;;AACCN,IAAAA,KAAK,CAAC;AACFS,MAAAA,GAAG,EAAE,SADH;AACc;AAChBC,MAAAA,MAAM,EAAE,MAFN;AAGFC,MAAAA,IAAI,EAAE;AACFC,QAAAA,MAAM,EAAGT,cADP,CAEN;;AAFM;AAHJ,KAAD,CAAL,CAQCU,IARD,CAQOC,QAAQ,IAAI;AACfC,MAAAA,KAAK,CAAC,wBAAD,CAAL;AACH,KAVD,EAWCC,KAXD,CAWQC,KAAD,IAAW;AACdV,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCU,IAAI,CAACC,KAAL,CAAWF,KAAX,CAAhC;AACAF,MAAAA,KAAK,CACD,sFADC,CAAL;AAGH,KAhBD;AAiBH,GApBD,CARsC,CA8BtC;;;AACA,sBACE,QAAC,cAAD;AACI,IAAA,KAAK,EAAC,SADV;AAEI,IAAA,IAAI,EAAC,oBAFT;AAGI,IAAA,cAAc,MAHlB;AAII,IAAA,eAAe,MAJnB;AAKI,IAAA,KAAK,EAAC,qCALV;AAMI,IAAA,WAAW,EAAG,kBAAiBb,KAAM,EANzC;AAOI,IAAA,MAAM,EAAEC,cAPZ;AAQI,IAAA,SAAS,EAAC,sBARd;AASI,IAAA,KAAK,EAAEE,OATX,CASoB;AATpB;AAUI,IAAA,SAAS,EAAC;AAVd;AAAA;AAAA;AAAA;AAAA,UADF;AAcH,CA7CD;;KAAMJ,oB;AAgDN,eAAeA,oBAAf","sourcesContent":["import React from 'react';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport axios from 'axios';\r\n\r\nconst StripeCheckoutButton = ({price}) => {\r\n    //stripe wants to see value in USD cents \r\n\r\n    const priceForStripe = price * 100; \r\n    const publishableKey = \"pk_test_51I9c9CLfAl74B6CQXK0r7mx07DG6u7tqeSQy0h8PaxV1DqyADCmJal0pHT7OaNyJajg9Rqdppcn8JDwGsRl51nav00TxVCuvqo\";\r\n    \r\n   //we are actually gonna make the request \r\n   //to the payment route /payment \r\n    const onToken = token => {\r\n        console.log(\"inside of the token\",token);\r\n       // alert('Payment Successful');\r\n        axios({\r\n            url: 'payment', //will use whatever url at where we are \r\n            method: 'post',\r\n            data: {\r\n                amount : priceForStripe\r\n            //\r\n            }\r\n        })\r\n        .then( response => {\r\n            alert('Paument was successful')\r\n        })\r\n        .catch((error) => {\r\n            console.log('Payment Error : ', JSON.parse(error));\r\n            alert(\r\n                'There was an issue with your pay. Please make sure you use the provided credit card.'\r\n            )\r\n        })\r\n    }\r\n   \r\n    //StripeCheckout Button takes a bunch of props   \r\n    return (\r\n      <StripeCheckout \r\n          label='Pay Now'\r\n          name='Nexus Ark Practice'\r\n          billingAddress\r\n          shippingAddress\r\n          image='https://sendeyo.com/up/d/f3eb2117da'\r\n          description={`Your total is $${price}`}\r\n          amount={priceForStripe}\r\n          paneLable='Pay Now (pane label)'\r\n          token={onToken} //token is onSuccess callback when the payment suceeds \r\n          stripeKey='pk_test_51I9c9CLfAl74B6CQXK0r7mx07DG6u7tqeSQy0h8PaxV1DqyADCmJal0pHT7OaNyJajg9Rqdppcn8JDwGsRl51nav00TxVCuvqo'\r\n      />\r\n    ) \r\n}\r\n\r\n\r\nexport default StripeCheckoutButton;"]},"metadata":{},"sourceType":"module"}