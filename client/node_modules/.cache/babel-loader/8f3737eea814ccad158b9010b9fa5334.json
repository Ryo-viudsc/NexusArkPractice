{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useState}from'react';import{ReactComponent as ShoppingIcon}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/shopping-bag.svg\";import'./cart-icon.style.scss';import{connect}from'react-redux';import{toggleCartHidden as _toggleCartHidden}from'../../redux/cart/cart.actions';import{selectCartItemsCount}from'../../redux/cart/cart.selectors';import{createStructuredSelector}from'reselect';import{hoverCartHidden as _hoverCartHidden}from'../../redux/cart/cart.actions';//TODO : \n//delete button on the left-top side \n//to toggle the cart\nvar CartIcon=function CartIcon(_ref){var toggleCartHidden=_ref.toggleCartHidden,hoverCartHidden=_ref.hoverCartHidden,itemCount=_ref.itemCount;return/*#__PURE__*/_jsxs(\"div\",{className:\"cart-icon\",onClick:toggleCartHidden,children:[/*#__PURE__*/_jsx(ShoppingIcon,{className:\"shopping-icon\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"item-count\",children:[\" \",itemCount,\" \"]})]});};//pass the whole state \nvar mapStateToProps=createStructuredSelector({itemCount:selectCartItemsCount});// const mapStateToProps = (state) => ({\n//     itemCount : state.cart.cartItems.reduce( (accumalatedQuantity, cartItem) => accumalatedQuantity + cartItem.quantity, 0 )\n// });\n//remember dispatch is the function that accepts the \n//action object and triggers the reducer \nvar mapDispatchToProps=function mapDispatchToProps(dispatch){return{toggleCartHidden:function toggleCartHidden(){return dispatch(_toggleCartHidden());},hoverCartHidden:function hoverCartHidden(){return dispatch(_hoverCartHidden());}};};export default connect(mapStateToProps,mapDispatchToProps)(CartIcon);","map":{"version":3,"sources":["C:/Users/bskki/AWSamp_GraphQL Udemy/crwn-clothing/client/src/components/cart-icon/cart-icon.component.jsx"],"names":["React","useState","connect","toggleCartHidden","selectCartItemsCount","createStructuredSelector","hoverCartHidden","CartIcon","itemCount","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"wFAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,C,8GAEA,MAAO,wBAAP,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,gBAAgB,GAAhBA,CAAAA,iBAAR,KAA+B,+BAA/B,CACA,OAAQC,oBAAR,KAAmC,iCAAnC,CACA,OAAQC,wBAAR,KAAuC,UAAvC,CACA,OAAQC,eAAe,GAAfA,CAAAA,gBAAR,KAA8B,+BAA9B,CAEA;AACA;AACA;AAGA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAqD,IAAnDJ,CAAAA,gBAAmD,MAAnDA,gBAAmD,CAAjCG,eAAiC,MAAjCA,eAAiC,CAAfE,SAAe,MAAfA,SAAe,CAEpE,mBACI,aAAK,SAAS,CAAC,WAAf,CACK,OAAO,CAAEL,gBADd,wBAGE,KAAC,YAAD,EAAc,SAAS,CAAC,eAAxB,EAHF,cAIE,cAAM,SAAS,CAAC,YAAhB,eAA+BK,SAA/B,OAJF,GADJ,CAQD,CAVD,CAYA;AACA,GAAMC,CAAAA,eAAe,CAAGJ,wBAAwB,CAAC,CAC7CG,SAAS,CAAGJ,oBADiC,CAAD,CAAhD,CAIA;AACA;AACA;AAEA;AACA;AACA,GAAMM,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,QAAe,CACtCR,gBAAgB,CAAG,kCAAMQ,CAAAA,QAAQ,CAACR,iBAAgB,EAAjB,CAAd,EADmB,CAEtCG,eAAe,CAAG,iCAAMK,CAAAA,QAAQ,CAACL,gBAAe,EAAhB,CAAd,EAFoB,CAAf,EAA3B,CAKA,cAAeJ,CAAAA,OAAO,CAACO,eAAD,CAAiBC,kBAAjB,CAAP,CAA4CH,QAA5C,CAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport {ReactComponent as ShoppingIcon} from '../../assets/shopping-bag.svg';\r\nimport './cart-icon.style.scss';\r\nimport {connect} from 'react-redux';\r\nimport {toggleCartHidden} from '../../redux/cart/cart.actions';\r\nimport {selectCartItemsCount} from '../../redux/cart/cart.selectors';\r\nimport {createStructuredSelector} from 'reselect';\r\nimport {hoverCartHidden} from '../../redux/cart/cart.actions';\r\n\r\n//TODO : \r\n//delete button on the left-top side \r\n//to toggle the cart\r\n\r\n\r\nconst CartIcon = ({toggleCartHidden, hoverCartHidden , itemCount}) => {\r\n  \r\n  return(\r\n      <div className='cart-icon' \r\n           onClick={toggleCartHidden}\r\n       >\r\n        <ShoppingIcon className='shopping-icon' />\r\n        <span className='item-count'> {itemCount} </span>\r\n      </div>\r\n  )\r\n};\r\n\r\n//pass the whole state \r\nconst mapStateToProps = createStructuredSelector({\r\n    itemCount : selectCartItemsCount\r\n})\r\n\r\n// const mapStateToProps = (state) => ({\r\n//     itemCount : state.cart.cartItems.reduce( (accumalatedQuantity, cartItem) => accumalatedQuantity + cartItem.quantity, 0 )\r\n// });\r\n\r\n//remember dispatch is the function that accepts the \r\n//action object and triggers the reducer \r\nconst mapDispatchToProps = (dispatch) => ({\r\n    toggleCartHidden : () => dispatch(toggleCartHidden()),\r\n    hoverCartHidden : () => dispatch(hoverCartHidden())\r\n});\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CartIcon); "]},"metadata":{},"sourceType":"module"}