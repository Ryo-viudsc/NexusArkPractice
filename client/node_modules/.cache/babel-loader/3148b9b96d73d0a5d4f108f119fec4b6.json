{"ast":null,"code":"import { createSelector } from 'reselect'; //the reason why we need COLLECTION_ID_MAP is....\n//1,  the url has only string values, such as localhost/shop/hats etc \n//while item data in shop.data js doesn't have the \n//item data in the correspond to its name \n//just a number like this \n// id: 1,\n// title: 'Hats',\n// routeName: 'hats',\n// items: [\n//   {\n//     id: 1,\n//     name: 'Brown Brim',\n//     imageU \n//just an object that contains string value with uid \n\nconst COLLECTION_ID_MAP = {\n  hats: 1,\n  sneakers: 2,\n  jackets: 3,\n  womens: 4,\n  mens: 5\n}; //params:\n// collectionId: \"hats\"\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector([selectShop], shop => shop.collections); //and we map over the collections \n\nexport const selectCollection = collectionUrlParam => createSelector([selectCollections], collections => collections.find(collection => collection.id === COLLECTION_ID_MAP[collectionUrlParam]));","map":{"version":3,"sources":["C:/Users/bskki/AWSamp_GraphQL Udemy/crwn-clothing/src/redux/shop/shop.selectors.js"],"names":["createSelector","COLLECTION_ID_MAP","hats","sneakers","jackets","womens","mens","selectShop","state","shop","selectCollections","collections","selectCollection","collectionUrlParam","find","collection","id"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,UAA7B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;;AACA,MAAMC,iBAAiB,GAAG;AACtBC,EAAAA,IAAI,EAAG,CADe;AAEtBC,EAAAA,QAAQ,EAAG,CAFW;AAGtBC,EAAAA,OAAO,EAAG,CAHY;AAItBC,EAAAA,MAAM,EAAG,CAJa;AAKtBC,EAAAA,IAAI,EAAG;AALe,CAA1B,C,CAOA;AACA;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,iBAAiB,GAAGV,cAAc,CAC7C,CAACO,UAAD,CAD6C,EAE7CE,IAAI,IAAIA,IAAI,CAACE,WAFgC,CAAxC,C,CAMP;;AACA,OAAO,MAAMC,gBAAgB,GAAGC,kBAAkB,IAChDb,cAAc,CACZ,CAACU,iBAAD,CADY,EAEZC,WAAW,IAAIA,WAAW,CAACG,IAAZ,CAAiBC,UAAU,IAAIA,UAAU,CAACC,EAAX,KAAkBf,iBAAiB,CAACY,kBAAD,CAAlE,CAFH,CADT","sourcesContent":["import {createSelector} from 'reselect';\r\n\r\n//the reason why we need COLLECTION_ID_MAP is....\r\n//1,  the url has only string values, such as localhost/shop/hats etc \r\n//while item data in shop.data js doesn't have the \r\n//item data in the correspond to its name \r\n//just a number like this \r\n// id: 1,\r\n// title: 'Hats',\r\n// routeName: 'hats',\r\n// items: [\r\n//   {\r\n//     id: 1,\r\n//     name: 'Brown Brim',\r\n//     imageU \r\n\r\n\r\n\r\n//just an object that contains string value with uid \r\nconst COLLECTION_ID_MAP = {\r\n    hats : 1,\r\n    sneakers : 2,\r\n    jackets : 3,\r\n    womens : 4,\r\n    mens : 5\r\n};\r\n//params:\r\n// collectionId: \"hats\"\r\n\r\nconst selectShop = state => state.shop; \r\n\r\nexport const selectCollections = createSelector(\r\n  [selectShop],\r\n  shop => shop.collections\r\n);\r\n\r\n\r\n//and we map over the collections \r\nexport const selectCollection = collectionUrlParam => \r\n  createSelector(\r\n    [selectCollections],\r\n    collections => collections.find(collection => collection.id === COLLECTION_ID_MAP[collectionUrlParam])\r\n  )"]},"metadata":{},"sourceType":"module"}