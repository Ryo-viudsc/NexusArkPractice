{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\bskki\\\\AWSamp_GraphQL Udemy\\\\crwn-clothing\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\";\nimport React from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport './sign-up.styles.scss';\n\nclass SignUp extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        displayName,\n        email,\n        password,\n        confirmPassword\n      } = this.state;\n\n      if (password !== confirmPassword) {\n        alert(\"password don't match\"); //do nothing\n\n        return;\n      }\n\n      try {\n        //Creates a new user account associated\n        // with the specified email address and password.\n        const {\n          user\n        } = await auth.createUserWithEmailAndPassword(email, password);\n        await createUserProfileDocument(user, {\n          displayName\n        });\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n\n    this.handleChange = event => {\n      //note that event data has \n      //event.target.value \n      //event.target.name\n      const {\n        name,\n        value\n      } = event.target; //dynamically set the name value \n\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  }\n\n  render() {\n    const {\n      displayName,\n      email,\n      password,\n      confirmPassword\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sign-up\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: \" I do not have an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Sign up with your email and password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"sign-up-form\",\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"text\",\n          name: \"displayName\",\n          value: displayName,\n          onChange: this.handleChange,\n          label: \"Display Name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"emai;\",\n          name: \"email\",\n          value: email,\n          onChange: this.handleChange,\n          label: \"Email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"password\",\n          name: \"password\",\n          value: password,\n          onChange: this.handleChange,\n          label: \"Password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"password\",\n          name: \"confirmPassword\",\n          value: confirmPassword,\n          onChange: this.handleChange,\n          label: \"confirmPassword\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \" SIGN UP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default SignUp;","map":{"version":3,"sources":["C:/Users/bskki/AWSamp_GraphQL Udemy/crwn-clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","FormInput","CustomButton","auth","createUserProfileDocument","SignUp","Component","constructor","handleSubmit","event","preventDefault","displayName","email","password","confirmPassword","state","alert","user","createUserWithEmailAndPassword","error","console","log","message","handleChange","name","value","target","setState","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport {auth, createUserProfileDocument} from '../../firebase/firebase.utils';\r\nimport './sign-up.styles.scss';\r\n\r\n\r\nclass SignUp extends React.Component {\r\n\r\n  constructor()\r\n  {\r\n      super();\r\n      this.state = {\r\n        displayName : '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n      }\r\n  }\r\n\r\n  handleSubmit = async event => {\r\n      event.preventDefault();\r\n      const {displayName, email, password, confirmPassword} = this.state;\r\n\r\n\r\n        if(password !== confirmPassword){\r\n            alert(\"password don't match\");\r\n            \r\n\r\n            //do nothing\r\n            return; \r\n        }\r\n\r\n        try{\r\n          //Creates a new user account associated\r\n          // with the specified email address and password.\r\n          const { user } = await auth.createUserWithEmailAndPassword(email, password);\r\n\r\n         await  createUserProfileDocument(user,{displayName});\r\n\r\n\r\n        }catch (error) {    \r\n            console.log(error.message);\r\n        }\r\n  };\r\n\r\n\r\n\r\n  handleChange = event => {\r\n\r\n    //note that event data has \r\n    //event.target.value \r\n    //event.target.name\r\n\r\n    const {name, value} = event.target; \r\n\r\n    //dynamically set the name value \r\n\r\n    this.setState({[name]:value});\r\n\r\n  };\r\n\r\n\r\n  render(){\r\n\r\n    const {displayName, email, password, confirmPassword} = this.state;\r\n\r\n      return(\r\n        <div className='sign-up'>\r\n          <h2 className='title'> I do not have an account</h2>\r\n          <span >Sign up with your email and password</span>\r\n            <form\r\n              className='sign-up-form'\r\n              onSubmit={this.handleSubmit}\r\n            >\r\n            <FormInput\r\n              type='text'\r\n              name='displayName'\r\n              value={displayName}\r\n              onChange={this.handleChange}\r\n              label='Display Name'\r\n              required\r\n            />\r\n            <FormInput\r\n              type='emai;'\r\n              name='email'\r\n              value={email}\r\n              onChange={this.handleChange}\r\n              label='Email'\r\n              required\r\n            />    \r\n           <FormInput\r\n              type='password'\r\n              name='password'\r\n              value={password}\r\n              onChange={this.handleChange}\r\n              label='Password'\r\n              required\r\n            />     \r\n           <FormInput\r\n                type='password'\r\n                name='confirmPassword'\r\n                value={confirmPassword}\r\n                onChange={this.handleChange}\r\n                label='confirmPassword'\r\n                required\r\n           />\r\n          <CustomButton type='submit'> SIGN UP</CustomButton>\r\n          </form> \r\n        </div>\r\n      )\r\n  }\r\n}\r\n\r\n\r\nexport default SignUp; \r\n\r\n"]},"metadata":{},"sourceType":"module"}