{"ast":null,"code":"import CartActionTypes from './cart.types';\nimport { addItemToCart } from './cart.utils';\nimport { removeItemFromCart } from './cart.utils';\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n}; //state.cartItems can be written as {cartItems : {}}\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return { ...state,\n        hidden: !state.hidden\n      };\n\n    case CartActionTypes.HOVER_CART_HIDDEN:\n      console.log(\"triggered\");\n      return { ...state,\n        hovered: !state.hovered\n      };\n\n    case CartActionTypes.ADD_ITEM:\n      return { ...state,\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      };\n\n    case CartActionTypes.REMOVE_ITEM:\n      return { ...state,\n        cartItems: removeItemFromCart(state.cartItems, action.payload)\n      };\n\n    case CartActionTypes.CLEAR_ITEM_FROM_CART:\n      return { ...state,\n        cartItems: state.cartItems.filter(cartItem => cartItem.id !== action.payload.id)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["C:/Users/bskki/AWSamp_GraphQL Udemy/crwn-clothing/src/redux/cart/cart.reducer.js"],"names":["CartActionTypes","addItemToCart","removeItemFromCart","INITIAL_STATE","hidden","cartItems","cartReducer","state","action","type","TOGGLE_CART_HIDDEN","HOVER_CART_HIDDEN","console","log","hovered","ADD_ITEM","payload","REMOVE_ITEM","CLEAR_ITEM_FROM_CART","filter","cartItem","id"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAAQC,aAAR,QAA4B,cAA5B;AACA,SAAQC,kBAAR,QAAiC,cAAjC;AACA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,MAAM,EAAG,IADW;AAEpBC,EAAAA,SAAS,EAAG;AAFQ,CAAtB,C,CAKA;;AACA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AAEnD,UAAOA,MAAM,CAACC,IAAd;AAEG,SAAKT,eAAe,CAACU,kBAArB;AACC,aAAO,EACL,GAAGH,KADE;AAELH,QAAAA,MAAM,EAAE,CAACG,KAAK,CAACH;AAFV,OAAP;;AAKD,SAAKJ,eAAe,CAACW,iBAArB;AACGC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,aAAO,EACL,GAAGN,KADE;AAELO,QAAAA,OAAO,EAAE,CAACP,KAAK,CAACO;AAFX,OAAP;;AAKH,SAAKd,eAAe,CAACe,QAArB;AACC,aAAO,EACL,GAAGR,KADE;AAELF,QAAAA,SAAS,EAAEJ,aAAa,CAACM,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACQ,OAAzB;AAFnB,OAAP;;AAKD,SAAKhB,eAAe,CAACiB,WAArB;AACC,aAAO,EACL,GAAGV,KADE;AAELF,QAAAA,SAAS,EAAGH,kBAAkB,CAACK,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACQ,OAAzB;AAFzB,OAAP;;AAKA,SAAKhB,eAAe,CAACkB,oBAArB;AACE,aAAM,EACJ,GAAGX,KADC;AAEJF,QAAAA,SAAS,EAAGE,KAAK,CAACF,SAAN,CAAgBc,MAAhB,CAAuBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBb,MAAM,CAACQ,OAAP,CAAeK,EAAlE;AAFR,OAAN;;AAIJ;AACE,aAAOd,KAAP;AAjCJ;AAmCH,CArCD;;AAwCA,eAAeD,WAAf","sourcesContent":["import CartActionTypes from './cart.types';\r\nimport {addItemToCart} from './cart.utils';\r\nimport {removeItemFromCart} from './cart.utils';\r\nconst INITIAL_STATE = {\r\n  hidden : true,\r\n  cartItems : []\r\n};\r\n\r\n//state.cartItems can be written as {cartItems : {}}\r\nconst cartReducer = (state = INITIAL_STATE, action) => {\r\n\r\n    switch(action.type){\r\n\r\n       case CartActionTypes.TOGGLE_CART_HIDDEN:\r\n        return {\r\n          ...state, \r\n          hidden: !state.hidden\r\n        };\r\n       \r\n       case CartActionTypes.HOVER_CART_HIDDEN: \r\n          console.log(\"triggered\")\r\n          return {\r\n            ...state,\r\n            hovered: !state.hovered  \r\n        };\r\n      \r\n       case CartActionTypes.ADD_ITEM: \r\n        return {\r\n          ...state,\r\n          cartItems: addItemToCart(state.cartItems, action.payload)\r\n        };\r\n      \r\n       case CartActionTypes.REMOVE_ITEM: \r\n        return {\r\n          ...state,\r\n          cartItems : removeItemFromCart(state.cartItems, action.payload) \r\n        };\r\n\r\n        case CartActionTypes.CLEAR_ITEM_FROM_CART:\r\n          return{\r\n            ...state,\r\n            cartItems : state.cartItems.filter(cartItem => cartItem.id !== action.payload.id)\r\n          }\r\n      default: \r\n        return state; \r\n    }\r\n}\r\n\r\n\r\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}