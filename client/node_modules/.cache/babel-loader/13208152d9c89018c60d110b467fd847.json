{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _regeneratorRuntime from\"C:/Users/bskki/AWSamp_GraphQL Udemy/crwn-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"C:/Users/bskki/AWSamp_GraphQL Udemy/crwn-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"C:/Users/bskki/AWSamp_GraphQL Udemy/crwn-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{useEffect}from'react';import'./App.css';import{Switch,Route,Redirect}from'react-router-dom';import LandingPage from\"./pages/landingpage/landing.page.component\";import HomePage from'./pages/homepage/homepage.component';import ShopPage from'./pages/shop/shop.component';import CheckoutPage from'./pages/checkout/checkout.component';import SignInAndSignUpPage from'./pages/sign-in-and-sign-up/sign-in-and-sign-up';import PrivacyPolicy from'./pages/privacy-policy/privacy-policy';import Agreement from'./pages/privacy-policy/agreement';import Header from'./components/header/header.component';import{auth,createUserProfileDocument//addCollectionAndDocuments\n}from\"./firebase/firebase.utils\";// import { SnapshotViewIOS } from 'react-native';\n//we wanna use auth credentials through this root \nimport{connect}from'react-redux';import{createStructuredSelector}from'reselect';//we want action to pass into dispatch / setCurrentUser is action object that accepts the payload and return the actionType\nimport{setCurrentUser as _setCurrentUser}from'./redux/user/user.actions';import{selectCurrentUser}from'./redux/user/user.selector';import{selectCollectionsForPreview}from'./redux/shop/shop.selectors';import FooterPage from'./components/footer/footer.component';import styled from'styled-components';// const Text = styled.div`\n//border : ${({isActive}) => isActive ? `1px` : `3px green border`}\n// `;\n//inside, write <Text isActive> </Text>\n//notice that Header is outside of the Switch \n//this way, react router doesn't have to re-render \n//everytime the switch is executed\nvar App=function App(_ref){var setCurrentUser=_ref.setCurrentUser,currentUser=_ref.currentUser;useEffect(function(){var unsubscribeFromAuth=auth.onAuthStateChanged(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(userAuth){var userRef;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!userAuth){_context.next=6;break;}_context.next=3;return createUserProfileDocument(userAuth);case 3:userRef=_context.sent;//to check if the database has any updates in the userAuth\n//you need the onsnapShot to listen to \n//the update of the database \n//for the comopnentDidMount of the entire app\nuserRef.onSnapshot(function(snapShot){setCurrentUser(_objectSpread({id:snapShot.id},snapShot.data()));});//end of if(userAuth) we also want to know \n//if the user is sign-ined in or not as well \nsetCurrentUser(userAuth);case 6:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref2.apply(this,arguments);};}());return function cleanup(){unsubscribeFromAuth();};},[setCurrentUser]);console.log(currentUser,\"here\");return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",component:HomePage}),/*#__PURE__*/_jsx(Route,{path:\"/shop\",component:ShopPage}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/checkout\",component:CheckoutPage}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/privacy-policy\",component:PrivacyPolicy}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/agreement\",component:Agreement}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/signin\",render:function render(){return currentUser?/*#__PURE__*/_jsx(Redirect,{to:\"/\"}):/*#__PURE__*/_jsx(SignInAndSignUpPage,{});}})]}),/*#__PURE__*/_jsx(FooterPage,{})]});};//without \"exact\" keyword, \n//if that is just path\n//then anything starts with '/', \n//it also gets rendered \nvar mapStateToProps=createStructuredSelector({currentUser:selectCurrentUser//collectionsArray : selectCollectionsForPreview\n});//dispatch accepts the actionState with payload(user)\n//fire off the reducer accoring to the action.type\n//user parameter will be whatever \n//setCurrentUser will accept as paramter like setCurrentUser(param)\nvar mapDispatchToProps=function mapDispatchToProps(dispatch){return{setCurrentUser:function setCurrentUser(user){return dispatch(_setCurrentUser(user));}};};//remember set currrent user looks like this\n// export const setCurrentUser = user => ({\n//   type: 'SET_CURRENT_USER',\n//   payload: user\n// });\n///////////////////////////////////////////////\n//also in the root reducer file\n// import userReducer from './user/user.reducer';\n// export default combineReducers({\n//   user: userReducer\n// });\n/////dispatch/////////////////////////////////////////\n// const userReducer = (state = INITIAL_STATE, action) => {\n//   switch (action.type) {\n//     case 'SET_CURRENT_USER':\n//       return {\n//         ...state,\n//         currentUser: action.payload\n//       };\n//     default:\n//       return state;\n//   }\n// };\n//in this app component, we don't need the state so \n//there's no need to put the mapStateToProps\nexport default connect(mapStateToProps,mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/bskki/AWSamp_GraphQL Udemy/crwn-clothing/client/src/App.js"],"names":["React","useEffect","Switch","Route","Redirect","LandingPage","HomePage","ShopPage","CheckoutPage","SignInAndSignUpPage","PrivacyPolicy","Agreement","Header","auth","createUserProfileDocument","connect","createStructuredSelector","setCurrentUser","selectCurrentUser","selectCollectionsForPreview","FooterPage","styled","App","currentUser","unsubscribeFromAuth","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","id","data","cleanup","console","log","mapStateToProps","mapDispatchToProps","dispatch","user"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\r\nimport './App.css';\r\n\r\nimport {  Switch, Route, Redirect } from 'react-router-dom';\r\nimport LandingPage from \"./pages/landingpage/landing.page.component\";\r\nimport HomePage from './pages/homepage/homepage.component';\r\nimport ShopPage from './pages/shop/shop.component';\r\nimport CheckoutPage from './pages/checkout/checkout.component';\r\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up';\r\nimport PrivacyPolicy from './pages/privacy-policy/privacy-policy';\r\nimport Agreement from './pages/privacy-policy/agreement';\r\n\r\n\r\nimport Header from './components/header/header.component';\r\nimport {\r\n        auth, \r\n        createUserProfileDocument, \r\n        //addCollectionAndDocuments\r\n  } from \"./firebase/firebase.utils\";\r\n// import { SnapshotViewIOS } from 'react-native';\r\n//we wanna use auth credentials through this root \r\nimport { connect } from 'react-redux';\r\nimport {createStructuredSelector} from 'reselect';\r\n\r\n\r\n//we want action to pass into dispatch / setCurrentUser is action object that accepts the payload and return the actionType\r\nimport { setCurrentUser } from './redux/user/user.actions';\r\nimport { selectCurrentUser } from './redux/user/user.selector';\r\nimport { selectCollectionsForPreview} from './redux/shop/shop.selectors';\r\nimport FooterPage from './components/footer/footer.component';\r\n\r\nimport styled from 'styled-components';\r\n\r\n// const Text = styled.div`\r\n    //border : ${({isActive}) => isActive ? `1px` : `3px green border`}\r\n// `;\r\n//inside, write <Text isActive> </Text>\r\n\r\n//notice that Header is outside of the Switch \r\n//this way, react router doesn't have to re-render \r\n//everytime the switch is executed\r\nconst App = ({setCurrentUser, currentUser}) => {\r\n \r\n   \r\n   useEffect(() => {\r\n     const unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\r\n      if(userAuth){\r\n        const userRef = await createUserProfileDocument(userAuth);\r\n        //to check if the database has any updates in the userAuth\r\n        //you need the onsnapShot to listen to \r\n        //the update of the database \r\n        //for the comopnentDidMount of the entire app\r\n         userRef.onSnapshot(snapShot => {\r\n          setCurrentUser({\r\n                id : snapShot.id,\r\n                ...snapShot.data()\r\n          });\r\n        });\r\n       //end of if(userAuth) we also want to know \r\n       //if the user is sign-ined in or not as well \r\n        setCurrentUser(userAuth);\r\n      }});\r\n\r\n      return function cleanup () {\r\n          unsubscribeFromAuth();\r\n      }\r\n\r\n   },[setCurrentUser]);\r\n    \r\n   console.log(currentUser,\"here\")\r\n\r\n    return (\r\n     <div> \r\n      <Header />\r\n      <Switch>\r\n       <Route exact path='/' component={HomePage} />\r\n       <Route path='/shop' component={ShopPage} />\r\n       <Route exact path='/checkout' component={CheckoutPage} />\r\n       <Route exact path='/privacy-policy' component={PrivacyPolicy} />\r\n       <Route exact path='/agreement' component={Agreement} />  \r\n       <Route exact path='/signin' \r\n               render={() => \r\n                       currentUser\r\n                       ? (<Redirect to='/' />)\r\n                       : (<SignInAndSignUpPage />)} />\r\n       </Switch>\r\n       <FooterPage />\r\n     </div>\r\n   )\r\n}\r\n//without \"exact\" keyword, \r\n//if that is just path\r\n//then anything starts with '/', \r\n//it also gets rendered \r\n\r\n\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    currentUser: selectCurrentUser,\r\n    //collectionsArray : selectCollectionsForPreview\r\n});\r\n\r\n//dispatch accepts the actionState with payload(user)\r\n//fire off the reducer accoring to the action.type\r\n//user parameter will be whatever \r\n//setCurrentUser will accept as paramter like setCurrentUser(param)\r\nconst mapDispatchToProps = dispatch => ({\r\n  setCurrentUser: user => dispatch(setCurrentUser(user))\r\n});\r\n\r\n//remember set currrent user looks like this\r\n// export const setCurrentUser = user => ({\r\n//   type: 'SET_CURRENT_USER',\r\n//   payload: user\r\n// });\r\n///////////////////////////////////////////////\r\n//also in the root reducer file\r\n// import userReducer from './user/user.reducer';\r\n// export default combineReducers({\r\n//   user: userReducer\r\n// });\r\n/////dispatch/////////////////////////////////////////\r\n\r\n// const userReducer = (state = INITIAL_STATE, action) => {\r\n//   switch (action.type) {\r\n//     case 'SET_CURRENT_USER':\r\n//       return {\r\n//         ...state,\r\n//         currentUser: action.payload\r\n//       };\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n\r\n\r\n\r\n//in this app component, we don't need the state so \r\n//there's no need to put the mapStateToProps\r\nexport default connect(mapStateToProps,mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}