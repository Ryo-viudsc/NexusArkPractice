{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _defineProperty from\"C:/Users/bskki/AWSamp_GraphQL Udemy/crwn-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:/Users/bskki/AWSamp_GraphQL Udemy/crwn-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"C:/Users/bskki/AWSamp_GraphQL Udemy/crwn-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/bskki/AWSamp_GraphQL Udemy/crwn-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/bskki/AWSamp_GraphQL Udemy/crwn-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import FormInput from'../form-input/form-input.component';import CustomButton from'../custom-button/custom-button.component';import{auth,signInWithGoogle}from'../../firebase/firebase.utils';import{SignInContainer,SignInTitle,ButtonsBarContainer}from'./sign-in.styles';var SignIn=function SignIn(){// constructor(props) {\n//   super(props);\n//   this.state = {\n//     email: '',\n//     password: ''\n//   };\n// }\nvar _useState=useState({email:'',password:''}),_useState2=_slicedToArray(_useState,2),userCredential=_useState2[0],setCredential=_useState2[1];var email=userCredential.email,password=userCredential.password;var handleSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();_context.prev=1;_context.next=4;return auth.signInWithEmailAndPassword(email,password);case 4:setCredential({email:'',password:''});_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](1);console.log(_context.t0);case 10:case\"end\":return _context.stop();}}},_callee,null,[[1,7]]);}));return function handleSubmit(_x){return _ref.apply(this,arguments);};}();var handleChange=function handleChange(event){var _event$target=event.target,value=_event$target.value,name=_event$target.name;setCredential(_objectSpread(_objectSpread({},userCredential),{},_defineProperty({},name,value)));};return/*#__PURE__*/_jsxs(SignInContainer,{children:[/*#__PURE__*/_jsx(SignInTitle,{children:\"I ALREADY HAVE AN ACCOUNT\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Sign in with your email and password\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(FormInput,{name:\"email\",type:\"email\",handleChange:handleChange,value:userCredential.email,label:\"email\",required:true}),/*#__PURE__*/_jsx(FormInput,{name:\"password\",type:\"password\",value:userCredential.password,handleChange:handleChange,label:\"password\",required:true}),/*#__PURE__*/_jsxs(ButtonsBarContainer,{children:[/*#__PURE__*/_jsx(CustomButton,{type:\"submit\",children:\" Sign in \"}),/*#__PURE__*/_jsx(CustomButton,{onClick:signInWithGoogle,isGoogleSignIn:true,children:\"Google\"})]})]})]});};export default SignIn;","map":{"version":3,"sources":["C:/Users/bskki/AWSamp_GraphQL Udemy/crwn-clothing/client/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","FormInput","CustomButton","auth","signInWithGoogle","SignInContainer","SignInTitle","ButtonsBarContainer","SignIn","email","password","userCredential","setCredential","handleSubmit","event","preventDefault","signInWithEmailAndPassword","console","log","handleChange","target","value","name"],"mappings":"i8BAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CAEA,MAAOC,CAAAA,SAAP,KAAsB,oCAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,0CAAzB,CAEA,OAASC,IAAT,CAAeC,gBAAf,KAAuC,+BAAvC,CAEA,OACEC,eADF,CAEEC,WAFF,CAGEC,mBAHF,KAIO,kBAJP,CAMA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnB;AACA;AAEA;AACA;AACA;AACA;AACA;AARmB,cAUyBR,QAAQ,CAAC,CAAES,KAAK,CAAE,EAAT,CAAaC,QAAQ,CAAE,EAAvB,CAAD,CAVjC,wCAURC,cAVQ,eAUQC,aAVR,kBAWPH,CAAAA,KAXO,CAWaE,cAXb,CAWPF,KAXO,CAWAC,QAXA,CAWaC,cAXb,CAWAD,QAXA,CAaf,GAAOG,CAAAA,YAAY,0FAAG,iBAAMC,KAAN,kHACpBA,KAAK,CAACC,cAAN,GADoB,sCAGRZ,CAAAA,IAAI,CAACa,0BAAL,CAAgCP,KAAhC,CAAuCC,QAAvC,CAHQ,QAIVE,aAAa,CAAC,CAAEH,KAAK,CAAE,EAAT,CAAaC,QAAQ,CAAE,EAAvB,CAAD,CAAb,CAJU,+EAMdO,OAAO,CAACC,GAAR,cANc,oEAAH,kBAAZL,CAAAA,YAAY,4CAAnB,CAUC,GAAMM,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAL,KAAK,CAAI,mBACHA,KAAK,CAACM,MADH,CACnBC,KADmB,eACnBA,KADmB,CACZC,IADY,eACZA,IADY,CAE3BV,aAAa,gCAAKD,cAAL,wBAAuBW,IAAvB,CAA8BD,KAA9B,GAAb,CACD,CAHF,CAMH,mBACE,MAAC,eAAD,yBACE,KAAC,WAAD,wCADF,cAEE,8DAFF,cAIE,cAAM,QAAQ,CAAER,YAAhB,wBACE,KAAC,SAAD,EACE,IAAI,CAAC,OADP,CAEE,IAAI,CAAC,OAFP,CAGE,YAAY,CAAEM,YAHhB,CAIE,KAAK,CAAER,cAAc,CAACF,KAJxB,CAKE,KAAK,CAAC,OALR,CAME,QAAQ,KANV,EADF,cASE,KAAC,SAAD,EACE,IAAI,CAAC,UADP,CAEE,IAAI,CAAC,UAFP,CAGE,KAAK,CAAEE,cAAc,CAACD,QAHxB,CAIE,YAAY,CAAES,YAJhB,CAKE,KAAK,CAAC,UALR,CAME,QAAQ,KANV,EATF,cAiBE,MAAC,mBAAD,yBACE,KAAC,YAAD,EAAc,IAAI,CAAC,QAAnB,uBADF,cAEE,KAAC,YAAD,EAAc,OAAO,CAAEf,gBAAvB,CAAyC,cAAc,KAAvD,oBAFF,GAjBF,GAJF,GADF,CAgCH,CA7DD,CA+DA,cAAeI,CAAAA,MAAf","sourcesContent":["import React, {useState} from 'react';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils';\r\n\r\nimport {\r\n  SignInContainer,\r\n  SignInTitle,\r\n  ButtonsBarContainer\r\n} from './sign-in.styles';\r\n\r\nconst SignIn = () => {\r\n  // constructor(props) {\r\n  //   super(props);\r\n\r\n  //   this.state = {\r\n  //     email: '',\r\n  //     password: ''\r\n  //   };\r\n  // }\r\n\r\n      const [userCredential, setCredential] = useState({ email: '', password: ''});\r\n      const { email, password } = userCredential;\r\n\r\n      const  handleSubmit = async event => {\r\n        event.preventDefault();\r\n            try {\r\n              await auth.signInWithEmailAndPassword(email, password);\r\n                  setCredential({ email: '', password: '' });\r\n            } catch (error) {\r\n              console.log(error);\r\n            }\r\n      };\r\n\r\n       const handleChange = event => {\r\n          const { value, name } = event.target;\r\n          setCredential({...userCredential,  [name]: value });\r\n        };\r\n\r\n \r\n    return (\r\n      <SignInContainer>\r\n        <SignInTitle>I ALREADY HAVE AN ACCOUNT</SignInTitle>\r\n        <span>Sign in with your email and password</span>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <FormInput\r\n            name='email'\r\n            type='email'\r\n            handleChange={handleChange}\r\n            value={userCredential.email}\r\n            label='email'\r\n            required\r\n          />\r\n          <FormInput\r\n            name='password'\r\n            type='password'\r\n            value={userCredential.password}\r\n            handleChange={handleChange}\r\n            label='password'\r\n            required\r\n          />\r\n          <ButtonsBarContainer>\r\n            <CustomButton type='submit'> Sign in </CustomButton>\r\n            <CustomButton onClick={signInWithGoogle} isGoogleSignIn>\r\n                   Google  \r\n            </CustomButton>\r\n          </ButtonsBarContainer>\r\n        </form>\r\n      </SignInContainer>\r\n    );\r\n  \r\n}\r\n\r\nexport default SignIn;"]},"metadata":{},"sourceType":"module"}