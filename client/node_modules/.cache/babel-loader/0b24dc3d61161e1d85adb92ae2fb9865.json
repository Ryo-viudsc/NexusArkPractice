{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\bskki\\\\AWSamp_GraphQL Udemy\\\\crwn-clothing\\\\src\\\\components\\\\cart\\\\cart-dropdown\\\\cart-dropdown.component.jsx\";\nimport React from 'react';\nimport CustomButton from '../../custom-button/custom-button.component';\nimport CartItem from '../../cart-item/cart-item.component';\nimport './cart-dropdown.styles.scss';\nimport { connect } from 'react-redux';\nimport { selectCartItems } from '../../../redux/cart/cart.selectors'; //destructure the cartItems from the props of the current component\n\nconst CartDropdown = ({\n  cartItems\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart-dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-items\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), cartItems.map(cartItem => /*#__PURE__*/_jsxDEV(CartItem, {\n      item: cartItem\n    }, cartItem.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(CustomButton, {\n      children: \" GO TO CHECKOUT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}; //this way, cart dropdown component \n//won't get re-rendered whenever some changes that are unrelated to the cart component happens \n\n\n_c = CartDropdown;\n\nconst mapStateToProps = state => ({\n  cartItems: selectCartItems(state)\n}); //OR\n// const mapStateToProps = state =>({\n//     cartItems : state.cart.cartItems\n// })\n\n\nexport default connect(mapStateToProps)(CartDropdown);\n\nvar _c;\n\n$RefreshReg$(_c, \"CartDropdown\");","map":{"version":3,"sources":["C:/Users/bskki/AWSamp_GraphQL Udemy/crwn-clothing/src/components/cart/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","CustomButton","CartItem","connect","selectCartItems","CartDropdown","cartItems","map","cartItem","id","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,6CAAzB;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAO,6BAAP;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,eAAR,QAA8B,oCAA9B,C,CAEA;;AACA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAiB;AAEpC,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADF,EAGIA,SAAS,CAACC,GAAV,CAAcC,QAAQ,iBACpB,QAAC,QAAD;AAA4B,MAAA,IAAI,EAAEA;AAAlC,OAAeA,QAAQ,CAACC,EAAxB;AAAA;AAAA;AAAA;AAAA,YADF,CAHJ,eAOE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAdD,C,CAgBA;AACA;;;KAjBMJ,Y;;AAkBN,MAAMK,eAAe,GAAGC,KAAD,KAAY;AACjCL,EAAAA,SAAS,EAAGF,eAAe,CAACO,KAAD;AADM,CAAZ,CAAvB,C,CAIA;AACA;AACA;AACA;;;AACA,eAAeR,OAAO,CAACO,eAAD,CAAP,CAAyBL,YAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport CustomButton from '../../custom-button/custom-button.component';\r\nimport CartItem from '../../cart-item/cart-item.component';\r\nimport './cart-dropdown.styles.scss';\r\nimport {connect} from 'react-redux';\r\nimport {selectCartItems} from '../../../redux/cart/cart.selectors';\r\n\r\n//destructure the cartItems from the props of the current component\r\nconst CartDropdown = ({cartItems}) => {\r\n\r\n  return(\r\n    <div className='cart-dropdown'>\r\n      <div className='cart-items' />\r\n      {\r\n        cartItems.map(cartItem => (\r\n          <CartItem key={cartItem.id} item={cartItem}/>\r\n          ))\r\n      }\r\n      <CustomButton> GO TO CHECKOUT</CustomButton>\r\n    </div>\r\n    )\r\n\r\n}\r\n\r\n//this way, cart dropdown component \r\n//won't get re-rendered whenever some changes that are unrelated to the cart component happens \r\nconst mapStateToProps= (state) => ({\r\n  cartItems : selectCartItems(state) \r\n})\r\n\r\n//OR\r\n// const mapStateToProps = state =>({\r\n//     cartItems : state.cart.cartItems\r\n// })\r\nexport default connect(mapStateToProps)(CartDropdown); "]},"metadata":{},"sourceType":"module"}