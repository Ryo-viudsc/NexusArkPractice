{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\bskki\\\\AWSamp_GraphQL Udemy\\\\crwn-clothing\\\\client\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils';\nimport { SignInContainer, SignInTitle, ButtonsBarContainer } from './sign-in.styles';\n\nconst SignIn = () => {\n  _s();\n\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     email: '',\n  //     password: ''\n  //   };\n  // }\n  const [userCredential, setCredential] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredential;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      await auth.signInWithEmailAndPassword(email, password);\n      setCredential({\n        email: '',\n        password: ''\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setCredential({ ...userCredential,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(SignInContainer, {\n    children: [/*#__PURE__*/_jsxDEV(SignInTitle, {\n      children: \"I ALREADY HAVE AN ACCOUNT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign in with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"email\",\n        type: \"email\",\n        handleChange: handleChange,\n        value: userCredential.email,\n        label: \"email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"password\",\n        type: \"password\",\n        value: userCredential.password,\n        handleChange: handleChange,\n        label: \"password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ButtonsBarContainer, {\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \" Sign in \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          onClick: signInWithGoogle,\n          isGoogleSignIn: true,\n          children: \"Google SignIn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n};\n\n_s(SignIn, \"WEX69s3FIPxEic4rPJ0btwRBDcc=\");\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["C:/Users/bskki/AWSamp_GraphQL Udemy/crwn-clothing/client/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","FormInput","CustomButton","auth","signInWithGoogle","SignInContainer","SignInTitle","ButtonsBarContainer","SignIn","userCredential","setCredential","email","password","handleSubmit","event","preventDefault","signInWithEmailAndPassword","error","console","log","handleChange","value","name","target"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AAEA,SAASC,IAAT,EAAeC,gBAAf,QAAuC,+BAAvC;AAEA,SACEC,eADF,EAEEC,WAFF,EAGEC,mBAHF,QAIO,kBAJP;;AAMA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB;AACA;AAEA;AACA;AACA;AACA;AACA;AAEI,QAAM,CAACC,cAAD,EAAiBC,aAAjB,IAAkCV,QAAQ,CAAC;AAAEW,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,QAAQ,EAAE;AAAvB,GAAD,CAAhD;AACA,QAAM;AAAED,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBH,cAA5B;;AAEA,QAAOI,YAAY,GAAG,MAAMC,KAAN,IAAe;AACnCA,IAAAA,KAAK,CAACC,cAAN;;AACI,QAAI;AACF,YAAMZ,IAAI,CAACa,0BAAL,CAAgCL,KAAhC,EAAuCC,QAAvC,CAAN;AACIF,MAAAA,aAAa,CAAC;AAAEC,QAAAA,KAAK,EAAE,EAAT;AAAaC,QAAAA,QAAQ,EAAE;AAAvB,OAAD,CAAb;AACL,KAHD,CAGE,OAAOK,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACN,GARD;;AAUC,QAAMG,YAAY,GAAGN,KAAK,IAAI;AAC3B,UAAM;AAAEO,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBR,KAAK,CAACS,MAA9B;AACAb,IAAAA,aAAa,CAAC,EAAC,GAAGD,cAAJ;AAAqB,OAACa,IAAD,GAAQD;AAA7B,KAAD,CAAb;AACD,GAHF;;AAMH,sBACE,QAAC,eAAD;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE;AAAM,MAAA,QAAQ,EAAER,YAAhB;AAAA,8BACE,QAAC,SAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,YAAY,EAAEO,YAHhB;AAIE,QAAA,KAAK,EAAEX,cAAc,CAACE,KAJxB;AAKE,QAAA,KAAK,EAAC,OALR;AAME,QAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,SAAD;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,KAAK,EAAEF,cAAc,CAACG,QAHxB;AAIE,QAAA,YAAY,EAAEQ,YAJhB;AAKE,QAAA,KAAK,EAAC,UALR;AAME,QAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,cATF,eAiBE,QAAC,mBAAD;AAAA,gCACE,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,YAAD;AAAc,UAAA,OAAO,EAAEhB,gBAAvB;AAAyC,UAAA,cAAc,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCH,CA7DD;;GAAMI,M;;KAAAA,M;AA+DN,eAAeA,MAAf","sourcesContent":["import React, {useState} from 'react';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils';\r\n\r\nimport {\r\n  SignInContainer,\r\n  SignInTitle,\r\n  ButtonsBarContainer\r\n} from './sign-in.styles';\r\n\r\nconst SignIn = () => {\r\n  // constructor(props) {\r\n  //   super(props);\r\n\r\n  //   this.state = {\r\n  //     email: '',\r\n  //     password: ''\r\n  //   };\r\n  // }\r\n\r\n      const [userCredential, setCredential] = useState({ email: '', password: ''});\r\n      const { email, password } = userCredential;\r\n\r\n      const  handleSubmit = async event => {\r\n        event.preventDefault();\r\n            try {\r\n              await auth.signInWithEmailAndPassword(email, password);\r\n                  setCredential({ email: '', password: '' });\r\n            } catch (error) {\r\n              console.log(error);\r\n            }\r\n      };\r\n\r\n       const handleChange = event => {\r\n          const { value, name } = event.target;\r\n          setCredential({...userCredential,  [name]: value });\r\n        };\r\n\r\n \r\n    return (\r\n      <SignInContainer>\r\n        <SignInTitle>I ALREADY HAVE AN ACCOUNT</SignInTitle>\r\n        <span>Sign in with your email and password</span>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <FormInput\r\n            name='email'\r\n            type='email'\r\n            handleChange={handleChange}\r\n            value={userCredential.email}\r\n            label='email'\r\n            required\r\n          />\r\n          <FormInput\r\n            name='password'\r\n            type='password'\r\n            value={userCredential.password}\r\n            handleChange={handleChange}\r\n            label='password'\r\n            required\r\n          />\r\n          <ButtonsBarContainer>\r\n            <CustomButton type='submit'> Sign in </CustomButton>\r\n            <CustomButton onClick={signInWithGoogle} isGoogleSignIn>\r\n              Google SignIn\r\n            </CustomButton>\r\n          </ButtonsBarContainer>\r\n        </form>\r\n      </SignInContainer>\r\n    );\r\n  \r\n}\r\n\r\nexport default SignIn;"]},"metadata":{},"sourceType":"module"}