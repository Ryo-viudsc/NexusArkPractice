{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\bskki\\\\AWSamp_GraphQL Udemy\\\\crwn-clothing\\\\client\\\\src\\\\components\\\\cart-icon\\\\cart-icon.component.jsx\";\nimport React, { useState } from 'react';\nimport { ReactComponent as ShoppingIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/shopping-bag.svg\";\nimport './cart-icon.style.scss';\nimport { connect } from 'react-redux';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\nimport { selectCartItemsCount } from '../../redux/cart/cart.selectors';\nimport { createStructuredSelector } from 'reselect';\nimport { hoverCartHidden } from '../../redux/cart/cart.actions'; //TODO : \n//delete button on the left-top side \n//to toggle the cart\n\nconst CartIcon = ({\n  toggleCartHidden,\n  hoverCartHidden,\n  itemCount\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart-icon\",\n    onClick: toggleCartHidden,\n    children: [/*#__PURE__*/_jsxDEV(ShoppingIcon, {\n      className: \"shopping-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"item-count\",\n      children: [\" \", itemCount, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }, this);\n}; //pass the whole state \n\n\n_c = CartIcon;\nconst mapStateToProps = createStructuredSelector({\n  itemCount: selectCartItemsCount\n}); // const mapStateToProps = (state) => ({\n//     itemCount : state.cart.cartItems.reduce( (accumalatedQuantity, cartItem) => accumalatedQuantity + cartItem.quantity, 0 )\n// });\n//remember dispatch is the function that accepts the \n//action object and triggers the reducer \n\nconst mapDispatchToProps = dispatch => ({\n  toggleCartHidden: () => dispatch(toggleCartHidden()),\n  hoverCartHidden: () => dispatch(hoverCartHidden())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartIcon);\n\nvar _c;\n\n$RefreshReg$(_c, \"CartIcon\");","map":{"version":3,"sources":["C:/Users/bskki/AWSamp_GraphQL Udemy/crwn-clothing/client/src/components/cart-icon/cart-icon.component.jsx"],"names":["React","useState","connect","toggleCartHidden","selectCartItemsCount","createStructuredSelector","hoverCartHidden","CartIcon","itemCount","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,OAAO,wBAAP;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,gBAAR,QAA+B,+BAA/B;AACA,SAAQC,oBAAR,QAAmC,iCAAnC;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,eAAR,QAA8B,+BAA9B,C,CAEA;AACA;AACA;;AAGA,MAAMC,QAAQ,GAAG,CAAC;AAACJ,EAAAA,gBAAD;AAAmBG,EAAAA,eAAnB;AAAqCE,EAAAA;AAArC,CAAD,KAAqD;AAEpE,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AACK,IAAA,OAAO,EAAEL,gBADd;AAAA,4BAGE,QAAC,YAAD;AAAc,MAAA,SAAS,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA,sBAA+BK,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQD,CAVD,C,CAYA;;;KAZMD,Q;AAaN,MAAME,eAAe,GAAGJ,wBAAwB,CAAC;AAC7CG,EAAAA,SAAS,EAAGJ;AADiC,CAAD,CAAhD,C,CAIA;AACA;AACA;AAEA;AACA;;AACA,MAAMM,kBAAkB,GAAIC,QAAD,KAAe;AACtCR,EAAAA,gBAAgB,EAAG,MAAMQ,QAAQ,CAACR,gBAAgB,EAAjB,CADK;AAEtCG,EAAAA,eAAe,EAAG,MAAMK,QAAQ,CAACL,eAAe,EAAhB;AAFM,CAAf,CAA3B;;AAKA,eAAeJ,OAAO,CAACO,eAAD,EAAiBC,kBAAjB,CAAP,CAA4CH,QAA5C,CAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport {ReactComponent as ShoppingIcon} from '../../assets/shopping-bag.svg';\r\nimport './cart-icon.style.scss';\r\nimport {connect} from 'react-redux';\r\nimport {toggleCartHidden} from '../../redux/cart/cart.actions';\r\nimport {selectCartItemsCount} from '../../redux/cart/cart.selectors';\r\nimport {createStructuredSelector} from 'reselect';\r\nimport {hoverCartHidden} from '../../redux/cart/cart.actions';\r\n\r\n//TODO : \r\n//delete button on the left-top side \r\n//to toggle the cart\r\n\r\n\r\nconst CartIcon = ({toggleCartHidden, hoverCartHidden , itemCount}) => {\r\n  \r\n  return(\r\n      <div className='cart-icon' \r\n           onClick={toggleCartHidden}\r\n       >\r\n        <ShoppingIcon className='shopping-icon' />\r\n        <span className='item-count'> {itemCount} </span>\r\n      </div>\r\n  )\r\n};\r\n\r\n//pass the whole state \r\nconst mapStateToProps = createStructuredSelector({\r\n    itemCount : selectCartItemsCount\r\n})\r\n\r\n// const mapStateToProps = (state) => ({\r\n//     itemCount : state.cart.cartItems.reduce( (accumalatedQuantity, cartItem) => accumalatedQuantity + cartItem.quantity, 0 )\r\n// });\r\n\r\n//remember dispatch is the function that accepts the \r\n//action object and triggers the reducer \r\nconst mapDispatchToProps = (dispatch) => ({\r\n    toggleCartHidden : () => dispatch(toggleCartHidden()),\r\n    hoverCartHidden : () => dispatch(hoverCartHidden())\r\n});\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CartIcon); "]},"metadata":{},"sourceType":"module"}